// Code generated by MockGen. DO NOT EDIT.
// Source: user_role.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/traPtitech/traQ/model"
	reflect "reflect"
)

// MockUserRoleRepository is a mock of UserRoleRepository interface
type MockUserRoleRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserRoleRepositoryMockRecorder
}

// MockUserRoleRepositoryMockRecorder is the mock recorder for MockUserRoleRepository
type MockUserRoleRepositoryMockRecorder struct {
	mock *MockUserRoleRepository
}

// NewMockUserRoleRepository creates a new mock instance
func NewMockUserRoleRepository(ctrl *gomock.Controller) *MockUserRoleRepository {
	mock := &MockUserRoleRepository{ctrl: ctrl}
	mock.recorder = &MockUserRoleRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserRoleRepository) EXPECT() *MockUserRoleRepositoryMockRecorder {
	return m.recorder
}

// CreateUserRoles mocks base method
func (m *MockUserRoleRepository) CreateUserRoles(roles ...*model.UserRole) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range roles {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateUserRoles", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserRoles indicates an expected call of CreateUserRoles
func (mr *MockUserRoleRepositoryMockRecorder) CreateUserRoles(roles ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserRoles", reflect.TypeOf((*MockUserRoleRepository)(nil).CreateUserRoles), roles...)
}

// GetAllUserRoles mocks base method
func (m *MockUserRoleRepository) GetAllUserRoles() ([]*model.UserRole, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllUserRoles")
	ret0, _ := ret[0].([]*model.UserRole)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllUserRoles indicates an expected call of GetAllUserRoles
func (mr *MockUserRoleRepositoryMockRecorder) GetAllUserRoles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllUserRoles", reflect.TypeOf((*MockUserRoleRepository)(nil).GetAllUserRoles))
}
