name: CI

on:
  push:
    branches:
      - 'master'
  pull_request:

jobs:
  mod:
    name: Mod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.2
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
      - run: go mod download
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [mod]
    env:
      GOCACHE: "/tmp/go/cache"
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.2
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - uses: actions/cache@v2
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - run: make traQ
      - uses: actions/upload-artifact@v1
        with:
          name: traQ
          path: traQ
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: "--timeout 3m0s"
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build]
    services:
      mysql:
        image: mariadb:10.6.4
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
    env:
      GOCACHE: "/tmp/go/cache"
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.2
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gomod-
      - uses: actions/cache@v2
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - name: Run tests
        run: |
          export TRAQ_IMAGEMAGICK=`which convert`
          go test ./... -coverprofile=coverage.txt -race -shuffle=on -vet=off
        env:
          MARIADB_HOSTNAME: 127.0.0.1
          MARIADB_PORT: 3306
          MARIADB_USERNAME: root
          MARIADB_PASSWORD: password
      - name: Upload coverage data
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt
  tbls:
    name: TBLS
    runs-on: ubuntu-latest
    needs: [build]
    services:
      mysql:
        image: mariadb:10.6.4
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: traq
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: traQ
      - name: Lint
        run: |
          source <(curl -sL https://git.io/use-tbls)
          chmod +x ./traQ/traQ
          ./traQ/traQ migrate --reset
          tbls lint
        env:
          TRAQ_MARIADB_HOST: 127.0.0.1
          TRAQ_MARIADB_PORT: 3306
          TRAQ_MARIADB_USERNAME: root
          TRAQ_MARIADB_PASSWORD: password
          TRAQ_MARIADB_DATABASE: traq
          TBLS_DSN: "mariadb://root:password@127.0.0.1:3306/traq"
  spectral:
    name: Spectral
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Spectral checks
        uses: stoplightio/spectral-action@v0.7.0
        with:
          file_glob: docs/v3-api.yaml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
